{"ast":null,"code":"var _jsxFileName = \"E:\\\\Front-End-Challenges\\\\React-Challenges\\\\ReactTip\\\\src\\\\components\\\\UI\\\\TipUI.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styles from './TipUI.module.css';\nimport logo from './logo.svg';\nimport UserInput from './UserInput';\nimport UserResult from './UserResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TipUI = () => {\n  _s();\n\n  const [Reset, setReset] = useState(false);\n  const DUMMY_DATA = {\n    TipAmount: 0.00,\n    Total: 0.00\n  };\n\n  const onReset = () => {\n    setReset(true);\n  };\n\n  const [saveData, SetSavaData] = useState(DUMMY_DATA);\n\n  const getData = Data => {\n    SetSavaData(Data);\n  };\n\n  console.log(saveData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.continer,\n      children: [/*#__PURE__*/_jsxDEV(UserInput, {\n        getData: getData,\n        Reset: Reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserResult, {\n        saveData: saveData,\n        onReset: onReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TipUI, \"LQKRug5m7rLisdpjcDpG3BR3IUk=\");\n\n_c = TipUI;\nexport default TipUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"TipUI\");","map":{"version":3,"sources":["E:/Front-End-Challenges/React-Challenges/ReactTip/src/components/UI/TipUI.js"],"names":["useState","styles","logo","UserInput","UserResult","TipUI","Reset","setReset","DUMMY_DATA","TipAmount","Total","onReset","saveData","SetSavaData","getData","Data","console","log","main","continer"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMQ,UAAU,GAAG;AACfC,IAAAA,SAAS,EAAE,IADI;AAEfC,IAAAA,KAAK,EAAE;AAFQ,GAAnB;;AAIA,QAAMC,OAAO,GAAG,MAAM;AAClBJ,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAGA,QAAM,CAACK,QAAD,EAAUC,WAAV,IAAyBb,QAAQ,CAACQ,UAAD,CAAvC;;AACA,QAAMM,OAAO,GAAIC,IAAD,IAAU;AACtBF,IAAAA,WAAW,CAACE,IAAD,CAAX;AACH,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACiB,IAAvB;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEhB,IAAV;AAAgB,MAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAED,MAAM,CAACkB,QAAvB;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,OAAO,EAAEL,OAApB;AAA6B,QAAA,KAAK,EAAER;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEM,QAAtB;AAAgC,QAAA,OAAO,EAAED;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAvBD;;GAAMN,K;;KAAAA,K;AAyBN,eAAeA,KAAf","sourcesContent":["import { useState } from 'react'\r\nimport styles from './TipUI.module.css'\r\nimport logo from './logo.svg'\r\nimport UserInput from './UserInput'\r\nimport UserResult from './UserResult'\r\nconst TipUI = () => {\r\n    const [Reset, setReset] = useState(false)\r\n    const DUMMY_DATA = {\r\n        TipAmount: 0.00,\r\n        Total: 0.00\r\n    }\r\n    const onReset = () => {\r\n        setReset(true)\r\n    }\r\n    const [saveData,SetSavaData] = useState(DUMMY_DATA)\r\n    const getData = (Data) => {\r\n        SetSavaData(Data)\r\n    }\r\n    console.log(saveData)\r\n    return (\r\n        <div className={styles.main}>\r\n            <img src={logo} alt=\"logo\" />\r\n            <div className={styles.continer}>\r\n                <UserInput getData={getData} Reset={Reset}/>\r\n                <UserResult saveData={saveData} onReset={onReset}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TipUI"]},"metadata":{},"sourceType":"module"}